package com.wbd.proxy2_008;
/**
 * 1.静态代理
 * @author jwh
 * 静态代理总结:
1.可以做到在不修改目标对象的功能前提下,对目标功能扩展.
2.缺点:因为代理对象需要与目标对象实现一样的接口,所以会有很多代理类,类太多.同时,一旦接口增加方法,目标对象与代理对象都要维护.
如何解决静态代理中的缺点呢?答案是可以使用动态代理方式
2.动态代理
总结:
代理对象不需要实现接口,但是目标对象一定要实现接口,否则不能用动态代理

动态代理有以下特点:
1.代理对象,不需要实现接口
2.代理对象的生成,是利用JDK的API,动态的在内存中构建代理对象(需要我们指定创建代理对象/目标对象实现的接口的类型)
3.动态代理也叫做:JDK代理,接口代理
 *
 */
public interface IUserDAO {
	
	public void save();

}
